<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.vaadin.fusion</groupId>
  <artifactId>fusion-project</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>Fusion</name>
  <packaging>pom</packaging>

  <modules>
    <module>packages/java/maven-plugin</module>
    <module>packages/java/parser-jvm-core</module>
    <module>packages/java/parser-jvm-plugin-backbone</module>
    <module>packages/java/parser-jvm-utils</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
    <formatter.basedir>${project.basedir}</formatter.basedir>
  </properties>

  <organization>
    <name>Vaadin Ltd</name>
    <url>https://vaadin.com</url>
  </organization>
  <url>https://vaadin.com</url>
  <licenses>
    <license>
      <name>Apache License Version 2.0</name>
      <distribution>repo</distribution>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>

  <repositories>
    <!-- The order of definitions matters. Explicitly defining central
        here to make sure it has the highest priority. -->
    <repository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <!-- The order of definitions matters. Explicitly defining central
        here to make sure it has the highest priority. -->
    <pluginRepository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.7</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
      </plugin>
      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
        <version>2.16.0</version>
        <configuration>
          <configFile>${formatter.basedir}/.config/VaadinJavaConventions.xml</configFile>
          <!-- Provide a dummy JS config file to avoid errors -->
          <configJsFile>${formatter.basedir}/.config/VaadinJavaConventions.xml</configJsFile>
          <lineEnding>LF</lineEnding>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
